version: "3"

services:
  db:
    image: mysql:8
    networks:
      - backend
    environment:
      MYSQL_DATABASE: virtd
      MYSQL_PASSWORD: QwErTy1234
      MYSQL_ROOT_HOST: '%'
      MYSQL_ROOT_PASSWORD: YtReWq4321
      MYSQL_USER: app
    volumes:
      - db-data:/var/lib/mysql
    deploy:
      placement:
        max_replicas_per_node: 1
        constraints: [node.role == manager]

  web:
    image: avssys/python-test:latest
    depends_on:
      - db
    environment:
      DB_HOST: db
      DB_NAME: virtd
      DB_PASSWORD: QwErTy1234
      DB_USER: app
    networks:
      - backend
    command: python not_tested_main.py

  reverse-proxy:
    image: haproxy:2.4
    restart: always
    networks:
        backend: {}
    ports:
    - "8080:8080"
    volumes:
    - ./haproxy/reverse/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:rw
    deploy:
      placement:
        max_replicas_per_node: 1
        constraints: [node.role == manager]

  ingress-proxy:
    image: nginx:1.21.1
    restart: always
    networks:
      - outside
    volumes:
    - ./nginx/ingress/default.conf:/etc/nginx/conf.d/default.conf:rw
    - ./nginx/ingress/nginx.conf:/etc/nginx/nginx.conf:rw
    deploy:
      placement:
        max_replicas_per_node: 1
        constraints: [node.role == manager]
networks:
  backend:
    driver: overlay
  outside:
    name: "host"
    external: true

volumes:
  db-data: