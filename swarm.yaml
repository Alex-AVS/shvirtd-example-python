version: "3"
x-env_file: &env_file
  env_file:
    - .env
services:
  db:
    image: mysql:8
    <<: [*env_file]
    networks:
      - backend

    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_HOST="%"
    volumes:
      - db_data:/var/lib/mysql
    deploy:
      placement:
        max_replicas_per_node: 1
        constraints: [node.role == manager]
  web:
    image: avssys/python-test:latest
    depends_on:
      - db

    <<: [*env_file]
    networks:
      - backend

    environment:
      - DB_NAME=${MYSQL_DATABASE}
      - DB_USER=${MYSQL_USER}
      - DB_PASSWORD=${MYSQL_PASSWORD}
      - DB_HOST=db

  reverse-proxy:
    image: haproxy:2.4
    restart: always
    networks:
        backend: {}
    ports:
    - "127.0.0.1:8080:8080"
    volumes:
    - ./haproxy/reverse/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:rw
    deploy:
      placement:
        max_replicas_per_node: 1
        constraints: [node.role == manager]

  ingress-proxy:
    image: nginx:1.21.1
    restart: always
    network_mode: host
    volumes:
    - ./nginx/ingress/default.conf:/etc/nginx/conf.d/default.conf:rw
    - ./nginx/ingress/nginx.conf:/etc/nginx/nginx.conf:rw
    deploy:
      placement:
        max_replicas_per_node: 1
        constraints: [node.role == manager]
networks:
  backend:
    driver: bridge


volumes:
  db-data: